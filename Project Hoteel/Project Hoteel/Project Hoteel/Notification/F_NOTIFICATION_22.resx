<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictor_icon_22.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        unX/D/Xa30yVONChAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timer_notification_22.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>